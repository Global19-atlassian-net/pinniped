/*
Copyright 2020 VMware, Inc.
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/suzerain-io/pinniped/generated/1.18/apis/crdpinniped/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PinnipedDiscoveryInfoLister helps list PinnipedDiscoveryInfos.
type PinnipedDiscoveryInfoLister interface {
	// List lists all PinnipedDiscoveryInfos in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PinnipedDiscoveryInfo, err error)
	// PinnipedDiscoveryInfos returns an object that can list and get PinnipedDiscoveryInfos.
	PinnipedDiscoveryInfos(namespace string) PinnipedDiscoveryInfoNamespaceLister
	PinnipedDiscoveryInfoListerExpansion
}

// pinnipedDiscoveryInfoLister implements the PinnipedDiscoveryInfoLister interface.
type pinnipedDiscoveryInfoLister struct {
	indexer cache.Indexer
}

// NewPinnipedDiscoveryInfoLister returns a new PinnipedDiscoveryInfoLister.
func NewPinnipedDiscoveryInfoLister(indexer cache.Indexer) PinnipedDiscoveryInfoLister {
	return &pinnipedDiscoveryInfoLister{indexer: indexer}
}

// List lists all PinnipedDiscoveryInfos in the indexer.
func (s *pinnipedDiscoveryInfoLister) List(selector labels.Selector) (ret []*v1alpha1.PinnipedDiscoveryInfo, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PinnipedDiscoveryInfo))
	})
	return ret, err
}

// PinnipedDiscoveryInfos returns an object that can list and get PinnipedDiscoveryInfos.
func (s *pinnipedDiscoveryInfoLister) PinnipedDiscoveryInfos(namespace string) PinnipedDiscoveryInfoNamespaceLister {
	return pinnipedDiscoveryInfoNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PinnipedDiscoveryInfoNamespaceLister helps list and get PinnipedDiscoveryInfos.
type PinnipedDiscoveryInfoNamespaceLister interface {
	// List lists all PinnipedDiscoveryInfos in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PinnipedDiscoveryInfo, err error)
	// Get retrieves the PinnipedDiscoveryInfo from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PinnipedDiscoveryInfo, error)
	PinnipedDiscoveryInfoNamespaceListerExpansion
}

// pinnipedDiscoveryInfoNamespaceLister implements the PinnipedDiscoveryInfoNamespaceLister
// interface.
type pinnipedDiscoveryInfoNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PinnipedDiscoveryInfos in the indexer for a given namespace.
func (s pinnipedDiscoveryInfoNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PinnipedDiscoveryInfo, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PinnipedDiscoveryInfo))
	})
	return ret, err
}

// Get retrieves the PinnipedDiscoveryInfo from the indexer for a given namespace and name.
func (s pinnipedDiscoveryInfoNamespaceLister) Get(name string) (*v1alpha1.PinnipedDiscoveryInfo, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pinnipeddiscoveryinfo"), name)
	}
	return obj.(*v1alpha1.PinnipedDiscoveryInfo), nil
}
