// Copyright 2020 the Pinniped contributors. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "go.pinniped.dev/generated/1.18/apis/config/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OIDCProviderConfigLister helps list OIDCProviderConfigs.
type OIDCProviderConfigLister interface {
	// List lists all OIDCProviderConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OIDCProviderConfig, err error)
	// OIDCProviderConfigs returns an object that can list and get OIDCProviderConfigs.
	OIDCProviderConfigs(namespace string) OIDCProviderConfigNamespaceLister
	OIDCProviderConfigListerExpansion
}

// oIDCProviderConfigLister implements the OIDCProviderConfigLister interface.
type oIDCProviderConfigLister struct {
	indexer cache.Indexer
}

// NewOIDCProviderConfigLister returns a new OIDCProviderConfigLister.
func NewOIDCProviderConfigLister(indexer cache.Indexer) OIDCProviderConfigLister {
	return &oIDCProviderConfigLister{indexer: indexer}
}

// List lists all OIDCProviderConfigs in the indexer.
func (s *oIDCProviderConfigLister) List(selector labels.Selector) (ret []*v1alpha1.OIDCProviderConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OIDCProviderConfig))
	})
	return ret, err
}

// OIDCProviderConfigs returns an object that can list and get OIDCProviderConfigs.
func (s *oIDCProviderConfigLister) OIDCProviderConfigs(namespace string) OIDCProviderConfigNamespaceLister {
	return oIDCProviderConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OIDCProviderConfigNamespaceLister helps list and get OIDCProviderConfigs.
type OIDCProviderConfigNamespaceLister interface {
	// List lists all OIDCProviderConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OIDCProviderConfig, err error)
	// Get retrieves the OIDCProviderConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OIDCProviderConfig, error)
	OIDCProviderConfigNamespaceListerExpansion
}

// oIDCProviderConfigNamespaceLister implements the OIDCProviderConfigNamespaceLister
// interface.
type oIDCProviderConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OIDCProviderConfigs in the indexer for a given namespace.
func (s oIDCProviderConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OIDCProviderConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OIDCProviderConfig))
	})
	return ret, err
}

// Get retrieves the OIDCProviderConfig from the indexer for a given namespace and name.
func (s oIDCProviderConfigNamespaceLister) Get(name string) (*v1alpha1.OIDCProviderConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("oidcproviderconfig"), name)
	}
	return obj.(*v1alpha1.OIDCProviderConfig), nil
}
